(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{345:function(t,a,e){"use strict";e.r(a);var s=e(2),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"js"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js"}},[t._v("#")]),t._v(" JS")]),t._v(" "),e("h2",{attrs:{id:"javascript-执行机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript-执行机制"}},[t._v("#")]),t._v(" JavaScript 执行机制")]),t._v(" "),e("blockquote",[e("p",[t._v("来源"),e("a",{attrs:{href:"https://juejin.im/post/59e85eebf265da430d571f89",target:"_blank",rel:"noopener noreferrer"}},[t._v("ssssyoki"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"_1-js-的异步"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-js-的异步"}},[t._v("#")]),t._v(" 1.js 的异步")]),t._v(" "),e("p",[t._v("javascript 是一门"),e("em",[t._v("单线程")]),t._v("语言，不管是什么新框架新语法糖实现的所谓异步，其实都是用同步的方法去模拟的，牢牢把握住单线程这点非常重要。")]),t._v(" "),e("h3",{attrs:{id:"_2-事件循环-event-loop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-事件循环-event-loop"}},[t._v("#")]),t._v(" 2.事件循环 Event Loop")]),t._v(" "),e("p",[t._v("事件循环是 js 实现异步的一种方法，也是 js 的执行机制。")]),t._v(" "),e("ul",[e("li",[t._v('同步和异步任务分别进入不同的执行"场所"，同步的进入主线程，异步的进入Event Table并注册函数。')]),t._v(" "),e("li",[t._v("当指定的事情完成时，Event Table会将这个函数移入Event Queue。")]),t._v(" "),e("li",[t._v("主线程内的任务执行完毕为空，会去Event Queue读取对应的函数，进入主线程执行。")]),t._v(" "),e("li",[t._v("上述过程会不断重复，也就是常说的Event Loop(事件循环)。")])]),t._v(" "),e("h3",{attrs:{id:"_3-javascript-的执行和运行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-javascript-的执行和运行"}},[t._v("#")]),t._v(" 3.javascript 的执行和运行")]),t._v(" "),e("p",[t._v("执行和运行有很大的区别，javascript 在不同的环境下，比如 node，浏览器，Ringo 等等，执行方式是不同的。而运行大多指 javascript 解析引擎，是统一的。")])])}),[],!1,null,null,null);a.default=r.exports}}]);